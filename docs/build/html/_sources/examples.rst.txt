–ü—Ä–∏–º–µ—Ä—ã –∏ –§–æ—Ä–º—É–ª—ã
=================

üìå –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ä–º—É–ª—ã –∏ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ª–∏–Ω–µ–π–Ω–æ–π –∏ –ª–∞–≥—Ä–∞–Ω–∂–µ–≤–æ–π –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏.

–õ–∏–Ω–µ–π–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è
----------------------

–§–æ—Ä–º—É–ª–∞ –ª–∏–Ω–µ–π–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏:

.. math::

    L(x) = y_i + \frac{y_{i+1} - y_i}{x_{i+1} - x_i} (x - x_i), \quad x \in [x_i, x_{i+1}]

–ü—Ä–∏–º–µ—Ä:

.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt
    from interpol.linear import linear_interpolation

    x = np.array([0, 1, 2])
    y = np.array([0, 1, 4])
    x_new = np.linspace(0, 2, 100)
    y_new = linear_interpolation(x, y, x_new)

    plt.plot(x_new, y_new, label="Linear")
    plt.scatter(x, y, color="red")
    plt.legend()
    plt.grid()
    plt.show()

---

–ü–æ–ª–∏–Ω–æ–º –õ–∞–≥—Ä–∞–Ω–∂–∞
-----------------

–§–æ—Ä–º—É–ª–∞:

.. math::

    P(x) = \sum_{i=0}^{n} y_i \prod_{\substack{j=0 \\ j \ne i}}^{n} \frac{x - x_j}{x_i - x_j}

–ü—Ä–∏–º–µ—Ä:

.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt
    from interpol.lagrange import lagrange_interpolation

    x = np.array([0, 1, 2])
    y = np.array([0, 1, 4])
    x_new = np.linspace(0, 2, 100)
    y_new = lagrange_interpolation(x, y, x_new)

    plt.plot(x_new, y_new, label="Lagrange")
    plt.scatter(x, y, color="red")
    plt.legend()
    plt.grid()
    plt.show()